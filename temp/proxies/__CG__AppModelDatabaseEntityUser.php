<?php

namespace Nettrine\Proxy\__CG__\App\Model\Database\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Model\Database\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'name', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'phone', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'state', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'role', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'accessToken', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'accessTokenAt', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'lastLoggedAt', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'id', 'createdAt', 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'name', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'phone', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'state', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'role', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'accessToken', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'accessTokenAt', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'lastLoggedAt', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'id', 'createdAt', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', []);

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone(string $phone): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', [$phone]);

        parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getState(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', []);

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setState(int $state): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', [$state]);

        parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', []);

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLoggedAt(): ?\App\Model\Utils\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLoggedAt', []);

        return parent::getLastLoggedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLoggedAt(?\App\Model\Utils\DateTime $lastLoggedAt): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLoggedAt', [$lastLoggedAt]);

        parent::setLastLoggedAt($lastLoggedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessToken(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessToken', []);

        return parent::getAccessToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessToken(?string $accessToken): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessToken', [$accessToken]);

        parent::setAccessToken($accessToken);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessTokenAt(): ?\App\Model\Utils\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessTokenAt', []);

        return parent::getAccessTokenAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessTokenAt(?\App\Model\Utils\DateTime $accessTokenAt): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessTokenAt', [$accessTokenAt]);

        parent::setAccessTokenAt($accessTokenAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstLetterFromName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstLetterFromName', []);

        return parent::getFirstLetterFromName();
    }

    /**
     * {@inheritDoc}
     */
    public function toRole(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toRole', []);

        return parent::toRole();
    }

    /**
     * {@inheritDoc}
     */
    public function changeLoggedAt(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'changeLoggedAt', []);

        parent::changeLoggedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function block(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'block', []);

        parent::block();
    }

    /**
     * {@inheritDoc}
     */
    public function activate(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'activate', []);

        parent::activate();
    }

    /**
     * {@inheritDoc}
     */
    public function isActivated(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isActivated', []);

        return parent::isActivated();
    }

    /**
     * {@inheritDoc}
     */
    public function toIdentity(): \Nette\Security\SimpleIdentity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toIdentity', []);

        return parent::toIdentity();
    }

    /**
     * {@inheritDoc}
     */
    public function toForm(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toForm', []);

        return parent::toForm();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', []);

        parent::setCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\App\Model\Utils\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', []);

        parent::setUpdatedAt();
    }

}
